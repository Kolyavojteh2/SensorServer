=====================================================================================================
Загальна інформація

Головне завдання написати програми для візуалізації даних в Python3.
При написанні коду використовувати як можна менше додаткових бібліотек, щоб було менше залежностей на інші бібліотеки.

Можеш до речі звернути увагу на getopt бібліотеку, яка дозволяє гнучко парсити аргументи командного рядку із флагами, але то не обов'язково робити саме із getopt.
Якщо не використовується getopt, то тоді аргументи мають фіксовану позицію і йдуть підряд, а не через флагі. Приклад:
Із getopt:
    python3 my_prog.py -c arg1 --path "./file.csv"
або
    python3 my_prog.py --path "./file.csv" -c arg1
В такому випадку у нас аргумент прив'язується до ключа і потім парситься разом з ним.

Без getopt(фіксована позиція):
    python3 my_prog.py arg1 "./file.csv"
В такому випадку я буду слідувати чіткому фіксованому порядку аргументів, то не є проблема.
Одним словом тут вибереш сама як тобі зручно.

Ці програми треба зробити до 19.11.2023
=====================================================================================================

=====================================================================================================
Програма 1: SimpleChart

На вхід програми йдуть наступні аргументи:
    1) шлях до csv-файлу із даними для графіка,
    2) шлях до файлу із одиницями виміру кожного стовпця(можливо теж csv).
    3) шлях до файлу картинки, куди треба зберегти графік
    4) тип графіку
Якщо простіше буде зробити окремими файлами для кожного типу графіку, тоді аргумент "4" можна упустити.

Результатом роботи програми буде файл із аргументу "3" та код, що повернеться із головної функції.
Код що повертається має бути 0, якщо програма виконалась без помилок.

Опис аргументів
1) CSV файл із даними графіка.
   В цьому файлі є 2 колонки.
   Заголовок колонок знаходиться в першому рядку. Наприклад (Time, Temperature).
   Перша колонка, як правило, містить час(Time) в секундах від 1 січня 1970 року 00:00.
   Друга колонка, як правило, містить конкретні дані(ціле число) якихось сенсорів. Одиниці виміру взяти в файлі із аргументу "2".

2) CSV(мабуть) файл із одиницями виміру.
   В цьому файлі є 2 колонки і один рядок.(Якщо варто зробити щоб у цьому файлі був такий самий заголовок(1 рядок) як і в файлі "2", то нехай).
   Кожна колонка відповідає одиницям виміру даних відповідного стовпця із файлу "1".
   Ці дані будуть використовуватись на графіку на осях(якщо вони є).

3) Файл для зберігання картинки графіку.
   Обов'язково потрібно пропарсити тип файлу із рядку(щоб визначити який тип картинки буде використовуватись при збереженні).
   Якщо це "зайва" робота, то можна вчинити простіше, зупинитись на одному якомусь типу картинки(png, bmp, jpeg і тд) та не виконувати парсинг.

4) Тип графіку
   Цей аргумент є рядком і може мати наступні значення, а також інші які ти додаси, якщо вони є доцільними:
        -- bar(стопчики вертикальні)
        -- line(лінійний графік)
        -- scatter(точковий графік)

Ця програма має створити картинку(png, jpeg, bmp або інший) і зберегти його до файлу.
На графіку відсутня легенда, але має бути довідкова інформація відображена осях до графіку. В осях мають бути поділки із числами чи датами, Назва осі(Температура, дата), що отримана із заголовка файла "1", одиниці виміру, що отримані із файлу "2".
В програмі захендлити відсутність якогось аргументу чи введено не валідний аргумент. Також обов'язково перевіряти на наявність файлів.

Приблизний алгоритм програми:
1. Парсимо аргументи програми. (return -1, якщо аргументи не валідні)
2. Перевіряємо наявність файлів. (return -2, якщо файли не знайдено)
3. Відкриваємо файл "1" та парсимо із нього дані. Закриваємо його
4. Відкриваємо файл "2" та парсимо одиниці виміру. Закриваємо його.
5. Перетворюємо 1 стопчик із Time(секунди) в Date(user-friendly формат ISODate).
6. Рендеримо картинку графіку(бажано зробити так щоб вікно не відкривалось, а робилось це у фоні).
7. Зберігаємо картинку до файлу.
8. Повернути 0 в термінал (return 0 в main)
=====================================================================================================

=====================================================================================================
Програма 2: StatisticsData

На вхід програми йдуть наступні аргументи:
    1) шлях до csv-файлу із даними,
    2) шлях до csv-файлу із результатами.

Результатом роботи програми буде файл із аргументу "2" та код, що повернеться із головної функції.
Код що повертається має бути 0, якщо програма виконалась без помилок.

Опис аргументів
1) CSV файл із даними графіка.
   В цьому файлі є 2 колонки.
   Заголовок колонок знаходиться в першому рядку. Наприклад (Time, Temperature).
   Перша колонка, як правило, містить час(Time) в секундах від 1 січня 1970 року 00:00.
   Друга колонка, як правило, містить конкретні дані(число із плаваючою комою) якихось сенсорів. Одиниці виміру взяти в файлі із аргументу "2".

2) Файл для зберігання статистичних даних.
   В цьому файлі будуть зберігатись обраховані статистичні дані. Наприклад стовпчики min, max, average і тд, та їх значення.
   Має бути два рядки в цьому файлі. В першому заголовок із іменами показників, в другому конкретні значення.

Ця програма має обрахувати статистичні дані про вхідний файл. Обов'язкові параметри мають бути min, max, average. Додаткові дані, які є доцільними наприклад про температуру(думай про неї), також вітаються.
В програмі захендлити відсутність якогось аргументу чи введено не валідний аргумент. Також обов'язково перевіряти на наявність файлів.

Приблизний алгоритм програми:
1. Парсимо аргументи програми. (return -1, якщо аргументи не валідні)
2. Перевіряємо наявність файлів. (return -2, якщо файли не знайдено)
3. Відкриваємо файл "1" та парсимо із нього дані. Закриваємо його
4. Вираховуємо статистичні дані.
7. Зберігаємо нові дані до файлу.
8. Повернути 0 в термінал (return 0 в main)
=====================================================================================================
